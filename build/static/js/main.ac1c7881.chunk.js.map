{"version":3,"sources":["main/Main.jsx","sidebar/Sidebar.jsx","App.jsx","index.js"],"names":["Main","activeNote","onUpdateNote","onEditField","field","value","Date","now","className","type","id","placeholder","title","onChange","e","target","autoFocus","body","Sidebar","notes","onAddNote","onDeleteNote","setActiveNote","sortedNotes","sort","a","b","lastModified","onClick","map","index","substr","toLocaleDateString","hour","minute","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","noteId","filter","find","updatedNote","updatedNotesArr","note","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA0CeA,EAxCF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACrBC,EAAc,SAACC,EAAOC,GAAW,IAAD,EACrCH,EAAa,2BACTD,GADQ,uBAEVG,EAAQC,GAFE,6BAGGC,KAAKC,OAHR,MAOb,OAAKN,EAIJ,sBAAKO,UAAU,WAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,uBACCC,KAAK,OACLC,GAAG,QACHC,YAAY,aACZN,MAAOJ,EAAWW,MAClBC,SAAU,SAACC,GAAD,OAAOX,EAAY,QAASW,EAAEC,OAAOV,QAC/CW,WAAS,IAEV,0BACCN,GAAG,OACHC,YAAY,qEACZN,MAAOJ,EAAWgB,KAClBJ,SAAU,SAACC,GAAD,OAAOX,EAAY,OAAQW,EAAEC,OAAOV,aAGhD,sBAAKG,UAAU,wBAAf,UACC,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWW,QAC1C,cAAC,IAAD,CAAeJ,UAAU,mBAAzB,SACEP,EAAWgB,aAvBR,qBAAKT,UAAU,iBAAf,yEC8BMU,EA1CC,SAAC,GAMV,IALNC,EAKK,EALLA,MACAC,EAIK,EAJLA,UACAC,EAGK,EAHLA,aACApB,EAEK,EAFLA,WACAqB,EACK,EADLA,cAEMC,EAAcJ,EAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAE5D,OACC,sBAAKnB,UAAU,cAAf,UACC,sBAAKA,UAAU,qBAAf,UACC,0CACA,wBAAQoB,QAASR,EAAjB,uCAED,qBAAKZ,UAAU,oBAAf,SACEe,EAAYM,KAAI,WAAoCC,GAApC,IAAGpB,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOK,EAAd,EAAcA,KAAMU,EAApB,EAAoBA,aAApB,OAChB,sBACCnB,UAAS,2BAAsBE,IAAOT,GAAc,UACpD2B,QAAS,kBAAMN,EAAcZ,IAF9B,UAKC,sBAAKF,UAAU,qBAAf,UACC,iCAASI,IACT,wBAAQgB,QAAS,SAACd,GAAD,OAAOO,EAAaX,IAArC,uBAGD,4BAAIO,GAAQA,EAAKc,OAAO,EAAG,KAAO,QAClC,wBAAOvB,UAAU,YAAjB,qCACM,IACJ,IAAIF,KAAKqB,GAAcK,mBAAmB,QAAS,CACnDC,KAAM,UACNC,OAAQ,iBAZLJ,YC0CIK,MAxDf,WAAgB,IAAD,EACYC,mBACzBC,aAAalB,MAAQmB,KAAKC,MAAMF,aAAalB,OAAS,IAFzC,mBACPA,EADO,KACAqB,EADA,OAIsBJ,oBAAS,GAJ/B,mBAIPnC,EAJO,KAIKqB,EAJL,KA0Cd,OApCAmB,qBAAU,WACTJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAUxB,MAC3C,CAACA,IAmCH,sBAAKX,UAAU,MAAf,UACC,cAAC,EAAD,CACCW,MAAOA,EACPC,UApCe,WACjB,IAAMwB,EAAU,CACflC,GAAImC,MACJjC,MAAO,iFACPK,KAAM,GACNU,aAAcrB,KAAKC,OAGpBiC,EAAS,CAACI,GAAF,mBAAczB,KACtBG,EAAcsB,EAAQlC,KA4BpBW,aAzBkB,SAACyB,GACrBN,EAASrB,EAAM4B,QAAO,qBAAGrC,KAAgBoC,OAyBvC7C,WAAYA,EACZqB,cAAeA,IAEhB,cAAC,EAAD,CAAMrB,WAZAkB,EAAM6B,MAAK,qBAAGtC,KAAgBT,KAYDC,aAzBhB,SAAC+C,GACrB,IAAMC,EAAkB/B,EAAMU,KAAI,SAACsB,GAClC,OAAIA,EAAKzC,KAAOuC,EAAYvC,GACpBuC,EAGDE,KAGRX,EAASU,UCrCXE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ac1c7881.chunk.js","sourcesContent":["import ReactMarkdown from \"react-markdown\";\n\nconst Main = ({ activeNote, onUpdateNote }) => {\n\tconst onEditField = (field, value) => {\n\t\tonUpdateNote({\n\t\t\t...activeNote,\n\t\t\t[field]: value,\n\t\t\tlastModified: Date.now(),\n\t\t});\n\t};\n\n\tif (!activeNote)\n\t\treturn <div className=\"no-active-note\">Noteを選択してください</div>;\n\n\treturn (\n\t\t<div className=\"app-main\">\n\t\t\t<div className=\"app-main-note-edit\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"title\"\n\t\t\t\t\tplaceholder=\"Note Title\"\n\t\t\t\t\tvalue={activeNote.title}\n\t\t\t\t\tonChange={(e) => onEditField(\"title\", e.target.value)}\n\t\t\t\t\tautoFocus\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"body\"\n\t\t\t\t\tplaceholder=\"ここに入力してください\"\n\t\t\t\t\tvalue={activeNote.body}\n\t\t\t\t\tonChange={(e) => onEditField(\"body\", e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"app-main-note-preview\">\n\t\t\t\t<h1 className=\"preview-title\">{activeNote.title}</h1>\n\t\t\t\t<ReactMarkdown className=\"markdown-preview\">\n\t\t\t\t\t{activeNote.body}\n\t\t\t\t</ReactMarkdown>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Main;\n","const Sidebar = ({\n\tnotes,\n\tonAddNote,\n\tonDeleteNote,\n\tactiveNote,\n\tsetActiveNote,\n}) => {\n\tconst sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n\n\treturn (\n\t\t<div className=\"app-sidebar\">\n\t\t\t<div className=\"app-sidebar-header\">\n\t\t\t\t<h1>Note-App</h1>\n\t\t\t\t<button onClick={onAddNote}>Noteを作成</button>\n\t\t\t</div>\n\t\t\t<div className=\"app-sidebar-notes\">\n\t\t\t\t{sortedNotes.map(({ id, title, body, lastModified }, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`app-sidebar-note ${id === activeNote && \"active\"}`}\n\t\t\t\t\t\tonClick={() => setActiveNote(id)}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"sidebar-note-title\">\n\t\t\t\t\t\t\t<strong>{title}</strong>\n\t\t\t\t\t\t\t<button onClick={(e) => onDeleteNote(id)}>Delete</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p>{body && body.substr(0, 100) + \"...\"}</p>\n\t\t\t\t\t\t<small className=\"note-meta\">\n\t\t\t\t\t\t\t最終更新{\" \"}\n\t\t\t\t\t\t\t{new Date(lastModified).toLocaleDateString(\"ja-JP\", {\n\t\t\t\t\t\t\t\thour: \"2-digit\",\n\t\t\t\t\t\t\t\tminute: \"2-digit\",\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Sidebar;\n","import { useEffect, useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport \"./App.css\";\nimport Main from \"./main/Main\";\nimport Sidebar from \"./sidebar/Sidebar\";\n\nfunction App() {\n\tconst [notes, setNotes] = useState(\n\t\tlocalStorage.notes ? JSON.parse(localStorage.notes) : []\n\t);\n\tconst [activeNote, setActiveNote] = useState(false);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\"notes\", JSON.stringify(notes));\n\t}, [notes]);\n\n\tconst onAddNote = () => {\n\t\tconst newNote = {\n\t\t\tid: uuid(),\n\t\t\ttitle: \"タイトルを入力してください\",\n\t\t\tbody: \"\",\n\t\t\tlastModified: Date.now(),\n\t\t};\n\n\t\tsetNotes([newNote, ...notes]);\n\t\tsetActiveNote(newNote.id);\n\t};\n\n\tconst onDeleteNote = (noteId) => {\n\t\tsetNotes(notes.filter(({ id }) => id !== noteId));\n\t};\n\n\tconst onUpdateNote = (updatedNote) => {\n\t\tconst updatedNotesArr = notes.map((note) => {\n\t\t\tif (note.id === updatedNote.id) {\n\t\t\t\treturn updatedNote;\n\t\t\t}\n\n\t\t\treturn note;\n\t\t});\n\n\t\tsetNotes(updatedNotesArr);\n\t};\n\n\tconst getActiveNote = () => {\n\t\treturn notes.find(({ id }) => id === activeNote);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Sidebar\n\t\t\t\tnotes={notes}\n\t\t\t\tonAddNote={onAddNote}\n\t\t\t\tonDeleteNote={onDeleteNote}\n\t\t\t\tactiveNote={activeNote}\n\t\t\t\tsetActiveNote={setActiveNote}\n\t\t\t/>\n\t\t\t<Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}